package demo;
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class S2 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		// Generated by Selenium IDE
		
		
		  private WebDriver driver;
		  private Map<String, Object> vars;
		  JavascriptExecutor js;
		  @Before
		  public void setUp() {
		    driver = new ChromeDriver();
		    js = (JavascriptExecutor) driver;
		    vars = new HashMap<String, Object>();
		  }
		  @After
		  public void tearDown() {
		    driver.quit();
		  }
		  @Test
		  public void lognisamle() {
		    // Test name: logni samle
		    // Step # | name | target | value
		    // 1 | open | /practice-test-login/ | 
		    driver.get("https://practicetestautomation.com/practice-test-login/");
		    // 2 | setWindowSize | 1552x840 | 
		    driver.manage().window().setSize(new Dimension(1552, 840));
		    // 3 | click | id=username | 
		    driver.findElement(By.id("username")).click();
		    // 4 | click | css=b:nth-child(2) | 
		    driver.findElement(By.cssSelector("b:nth-child(2)")).click();
		    // 5 | click | css=b:nth-child(2) | 
		    driver.findElement(By.cssSelector("b:nth-child(2)")).click();
		    // 6 | doubleClick | css=b:nth-child(2) | 
		    {
		      WebElement element = driver.findElement(By.cssSelector("b:nth-child(2)"));
		      Actions builder = new Actions(driver);
		      builder.doubleClick(element).perform();
		    }
		    // 7 | click | id=username | 
		    driver.findElement(By.id("username")).click();
		    // 8 | type | id=username | student
		    driver.findElement(By.id("username")).sendKeys("student");
		    // 9 | click | id=password | 
		    driver.findElement(By.id("password")).click();
		    // 10 | type | id=password | Password123
		    driver.findElement(By.id("password")).sendKeys("Password123");
		    // 11 | click | id=submit | 
		    driver.findElement(By.id("submit")).click();
		    // 12 | click | css=.post-title | 
		    driver.findElement(By.cssSelector(".post-title")).click();
		    // 13 | verifyText | css=.post-title | Logged In Successfully
		    assertThat(driver.findElement(By.cssSelector(".post-title")).getText(), is("Logged In Successfully"));
		    // 14 | click | css=.has-text-align-center | 
		    driver.findElement(By.cssSelector(".has-text-align-center")).click();
		    // 15 | verifyText | css=strong | Congratulations student. You successfully logged in!
		    assertThat(driver.findElement(By.cssSelector("strong")).getText(), is("Congratulations student. You successfully logged in!"));
		    // 16 | click | linkText=Log out | 
		    driver.findElement(By.linkText("Log out")).click();
		  }
		


	}

}
